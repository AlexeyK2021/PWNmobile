openapi: 3.0.3
info:
  title: Messanger API
  version: 0.0.1
servers:
  - url: http://<host-ip>/api/v1
tags:
  - name: message
    description: Information about chats
  - name: user
    description: Information about user
paths:
  /message/new:
    post:
      tags:
        - message
      summary: Add new message
      requestBody:
        description: Create a new chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '405':
          description: Invalid input

  /message/delete/{messageId}:
    delete:
      tags:
        - message
      summary: Delete message by ID
      # operation: deleteMessageByChatId
      parameters:
        - name: chatId
          in: path
          description: ID of chat to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                description: Deleted message ID
                type: integer
                format: int64
                example: 10
        '405':
          description: Invalid input

  /message/update/{messageId}:
    patch:
      tags:
        - message
      summary: Update message by ID
      # operation: updateMessageByChatId
      parameters:
        - name: chatId
          in: path
          description: ID of chat to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update a message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '405':
          description: Invalid input

  /message/check/{userId}:
    get:
      tags:
        - message
      summary: Ð¡hecking for new messages
      parameters:
        - name: userId
          in: path
          description: ID of user to check new messages
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                description: New messages available
                type: boolean
                format: int64
                example: true
        '405':
          description: Invalid input

  /chat/{chatId}:
    get:
      tags:
        - chat
      summary: Find chat by ID
      # operation: getMessageByChatId
      parameters:
        - name: chatId
          in: path
          description: ID of chat to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '405':
          description: Invalid input

  /chat/delete/{chatId}:
    delete:
      tags:
        - chat
      summary: Delete chat by ChatId
      parameters:
        - name: chatId
          in: path
          description: Id of chat to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '405':
          description: Invalid input

  /user/{userId}:
    get:
        tags:
          - user
        summary: Get info about user
        parameters:
          - name: userId
            in: path
            description: ID of user to get info
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '405':
            description: Invalid input
  /user/delete/{userId}:
    delete:
      tags:
        - user
      summary: Delete user by ID
      # operation: deleteMessageByChatId
      parameters:
        - name: userId
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                description: Deleted user ID
                type: integer
                format: int64
                example: 10
        '405':
          description: Invalid input
  /user/new:
    post:
      tags:
        - user
      summary: Create a new user
      requestBody:
        description: Create a new chat
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '405':
            description: Invalid input

  /user/update/{userId}:
    patch:
      tags:
        - user
      summary: Update a user
      parameters:
        - name: userId
          in: path
          description: ID of user to update data
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '405':
            description: Invalid input


components:
  schemas:
    Message:
      type: object
      properties:
        message_id:
          type: integer
          format: int64
          example: 10
        sender_id:
          type: integer
          format: int64
          example: 5
        reciever_id:
          type: integer
          format: int64
          example: 5
        message_text:
          type: string
          example: Hello
        message_time:
          type: string
          format: date-time
    User:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 10
        nickname:
          type: string
        city:
          type: string
        birthday:
          type: string
          format: date-time
        icon_uri:
          type: string
          format: uri